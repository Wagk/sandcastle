#ifndef math_vec_4_h__
#define math_vec_4_h__

#include <math/vec.h>
#include <math/vec2.h>
#include <math/vec3.h>

namespace sandcastle::math
{

	struct vec4 : public vector<4, float>
	{

		using vector<4, float>::vector;

		vec4(float x, float y, float z, float w);
		vec4(const vec3& rhs, float w);
		vec4(const vec2& rhs, float z, float w);

		//swizzling functions
		float x() const { return m[0]; };
		float y() const { return m[1]; };
		float z() const { return m[2]; };
		float w() const { return m[3]; };

		vec2 xx() const { return vec2(m[0], m[0]); };
		vec2 xy() const { return vec2(m[0], m[1]); };
		vec2 xz() const { return vec2(m[0], m[2]); };
		vec2 xw() const { return vec2(m[0], m[3]); };

		vec2 yx() const { return vec2(m[1], m[0]); };
		vec2 yy() const { return vec2(m[1], m[1]); };
		vec2 yz() const { return vec2(m[1], m[2]); };
		vec2 yw() const { return vec2(m[1], m[3]); };

		vec2 zx() const { return vec2(m[2], m[0]); };
		vec2 zy() const { return vec2(m[2], m[1]); };
		vec2 zz() const { return vec2(m[2], m[2]); };
		vec2 zw() const { return vec2(m[2], m[3]); };

		vec2 wx() const { return vec2(m[3], m[0]); };
		vec2 wy() const { return vec2(m[3], m[1]); };
		vec2 wz() const { return vec2(m[3], m[2]); };
		vec2 ww() const { return vec2(m[3], m[3]); };

		vec3 xxx() const { return vec3(m[0], m[0], m[0]); };
		vec3 xxy() const { return vec3(m[0], m[0], m[1]); };
		vec3 xxz() const { return vec3(m[0], m[0], m[2]); };
		vec3 xxw() const { return vec3(m[0], m[0], m[3]); };
		vec3 xyx() const { return vec3(m[0], m[1], m[0]); };
		vec3 xyy() const { return vec3(m[0], m[1], m[1]); };
		vec3 xyz() const { return vec3(m[0], m[1], m[2]); };
		vec3 xyw() const { return vec3(m[0], m[1], m[3]); };
		vec3 xzx() const { return vec3(m[0], m[2], m[0]); };
		vec3 xzy() const { return vec3(m[0], m[2], m[1]); };
		vec3 xzz() const { return vec3(m[0], m[2], m[2]); };
		vec3 xzw() const { return vec3(m[0], m[2], m[3]); };
		vec3 xwx() const { return vec3(m[0], m[3], m[0]); };
		vec3 xwy() const { return vec3(m[0], m[3], m[1]); };
		vec3 xwz() const { return vec3(m[0], m[3], m[2]); };
		vec3 xww() const { return vec3(m[0], m[3], m[3]); };

		vec3 yxx() const { return vec3(m[1], m[0], m[0]); };
		vec3 yxy() const { return vec3(m[1], m[0], m[1]); };
		vec3 yxz() const { return vec3(m[1], m[0], m[2]); };
		vec3 yxw() const { return vec3(m[1], m[0], m[3]); };
		vec3 yyx() const { return vec3(m[1], m[1], m[0]); };
		vec3 yyy() const { return vec3(m[1], m[1], m[1]); };
		vec3 yyz() const { return vec3(m[1], m[1], m[2]); };
		vec3 yyw() const { return vec3(m[1], m[1], m[3]); };
		vec3 yzx() const { return vec3(m[1], m[2], m[0]); };
		vec3 yzy() const { return vec3(m[1], m[2], m[1]); };
		vec3 yzz() const { return vec3(m[1], m[2], m[2]); };
		vec3 yzw() const { return vec3(m[1], m[2], m[3]); };
		vec3 ywx() const { return vec3(m[1], m[3], m[0]); };
		vec3 ywy() const { return vec3(m[1], m[3], m[1]); };
		vec3 ywz() const { return vec3(m[1], m[3], m[2]); };
		vec3 yww() const { return vec3(m[1], m[3], m[3]); };

		vec3 zxx() const { return vec3(m[2], m[0], m[0]); };
		vec3 zxy() const { return vec3(m[2], m[0], m[1]); };
		vec3 zxz() const { return vec3(m[2], m[0], m[2]); };
		vec3 zxw() const { return vec3(m[2], m[0], m[3]); };
		vec3 zyx() const { return vec3(m[2], m[1], m[0]); };
		vec3 zyy() const { return vec3(m[2], m[1], m[1]); };
		vec3 zyz() const { return vec3(m[2], m[1], m[2]); };
		vec3 zyw() const { return vec3(m[2], m[1], m[3]); };
		vec3 zzx() const { return vec3(m[2], m[2], m[0]); };
		vec3 zzy() const { return vec3(m[2], m[2], m[1]); };
		vec3 zzz() const { return vec3(m[2], m[2], m[2]); };
		vec3 zzw() const { return vec3(m[2], m[2], m[3]); };
		vec3 zwx() const { return vec3(m[2], m[3], m[0]); };
		vec3 zwy() const { return vec3(m[2], m[3], m[1]); };
		vec3 zwz() const { return vec3(m[2], m[3], m[2]); };
		vec3 zww() const { return vec3(m[2], m[3], m[3]); };

		vec3 wxx() const { return vec3(m[3], m[0], m[0]); };
		vec3 wxy() const { return vec3(m[3], m[0], m[1]); };
		vec3 wxz() const { return vec3(m[3], m[0], m[2]); };
		vec3 wxw() const { return vec3(m[3], m[0], m[3]); };
		vec3 wyx() const { return vec3(m[3], m[1], m[0]); };
		vec3 wyy() const { return vec3(m[3], m[1], m[1]); };
		vec3 wyz() const { return vec3(m[3], m[1], m[2]); };
		vec3 wyw() const { return vec3(m[3], m[1], m[3]); };
		vec3 wzx() const { return vec3(m[3], m[2], m[0]); };
		vec3 wzy() const { return vec3(m[3], m[2], m[1]); };
		vec3 wzz() const { return vec3(m[3], m[2], m[2]); };
		vec3 wzw() const { return vec3(m[3], m[2], m[3]); };
		vec3 wwx() const { return vec3(m[3], m[3], m[0]); };
		vec3 wwy() const { return vec3(m[3], m[3], m[1]); };
		vec3 wwz() const { return vec3(m[3], m[3], m[2]); };
		vec3 www() const { return vec3(m[3], m[3], m[3]); };

		vec4 xxxx() const { return vec4(m[0], m[0], m[0], m[0]); };
		vec4 xxxy() const { return vec4(m[0], m[0], m[0], m[1]); };
		vec4 xxxz() const { return vec4(m[0], m[0], m[0], m[2]); };
		vec4 xxxw() const { return vec4(m[0], m[0], m[0], m[3]); };
		vec4 xxyx() const { return vec4(m[0], m[0], m[1], m[0]); };
		vec4 xxyy() const { return vec4(m[0], m[0], m[1], m[1]); };
		vec4 xxyz() const { return vec4(m[0], m[0], m[1], m[2]); };
		vec4 xxyw() const { return vec4(m[0], m[0], m[1], m[3]); };
		vec4 xxzx() const { return vec4(m[0], m[0], m[2], m[0]); };
		vec4 xxzy() const { return vec4(m[0], m[0], m[2], m[1]); };
		vec4 xxzz() const { return vec4(m[0], m[0], m[2], m[2]); };
		vec4 xxzw() const { return vec4(m[0], m[0], m[2], m[3]); };
		vec4 xxwx() const { return vec4(m[0], m[0], m[3], m[0]); };
		vec4 xxwy() const { return vec4(m[0], m[0], m[3], m[1]); };
		vec4 xxwz() const { return vec4(m[0], m[0], m[3], m[2]); };
		vec4 xxww() const { return vec4(m[0], m[0], m[3], m[3]); };
		vec4 xyxx() const { return vec4(m[0], m[1], m[0], m[0]); };
		vec4 xyxy() const { return vec4(m[0], m[1], m[0], m[1]); };
		vec4 xyxz() const { return vec4(m[0], m[1], m[0], m[2]); };
		vec4 xyxw() const { return vec4(m[0], m[1], m[0], m[3]); };
		vec4 xyyx() const { return vec4(m[0], m[1], m[1], m[0]); };
		vec4 xyyy() const { return vec4(m[0], m[1], m[1], m[1]); };
		vec4 xyyz() const { return vec4(m[0], m[1], m[1], m[2]); };
		vec4 xyyw() const { return vec4(m[0], m[1], m[1], m[3]); };
		vec4 xyzx() const { return vec4(m[0], m[1], m[2], m[0]); };
		vec4 xyzy() const { return vec4(m[0], m[1], m[2], m[1]); };
		vec4 xyzz() const { return vec4(m[0], m[1], m[2], m[2]); };
		vec4 xyzw() const { return vec4(m[0], m[1], m[2], m[3]); };
		vec4 xywx() const { return vec4(m[0], m[1], m[3], m[0]); };
		vec4 xywy() const { return vec4(m[0], m[1], m[3], m[1]); };
		vec4 xywz() const { return vec4(m[0], m[1], m[3], m[2]); };
		vec4 xyww() const { return vec4(m[0], m[1], m[3], m[3]); };
		vec4 xzxx() const { return vec4(m[0], m[2], m[0], m[0]); };
		vec4 xzxy() const { return vec4(m[0], m[2], m[0], m[1]); };
		vec4 xzxz() const { return vec4(m[0], m[2], m[0], m[2]); };
		vec4 xzxw() const { return vec4(m[0], m[2], m[0], m[3]); };
		vec4 xzyx() const { return vec4(m[0], m[2], m[1], m[0]); };
		vec4 xzyy() const { return vec4(m[0], m[2], m[1], m[1]); };
		vec4 xzyz() const { return vec4(m[0], m[2], m[1], m[2]); };
		vec4 xzyw() const { return vec4(m[0], m[2], m[1], m[3]); };
		vec4 xzzx() const { return vec4(m[0], m[2], m[2], m[0]); };
		vec4 xzzy() const { return vec4(m[0], m[2], m[2], m[1]); };
		vec4 xzzz() const { return vec4(m[0], m[2], m[2], m[2]); };
		vec4 xzzw() const { return vec4(m[0], m[2], m[2], m[3]); };
		vec4 xzwx() const { return vec4(m[0], m[2], m[3], m[0]); };
		vec4 xzwy() const { return vec4(m[0], m[2], m[3], m[1]); };
		vec4 xzwz() const { return vec4(m[0], m[2], m[3], m[2]); };
		vec4 xzww() const { return vec4(m[0], m[2], m[3], m[3]); };
		vec4 xwxx() const { return vec4(m[0], m[3], m[0], m[0]); };
		vec4 xwxy() const { return vec4(m[0], m[3], m[0], m[1]); };
		vec4 xwxz() const { return vec4(m[0], m[3], m[0], m[2]); };
		vec4 xwxw() const { return vec4(m[0], m[3], m[0], m[3]); };
		vec4 xwyx() const { return vec4(m[0], m[3], m[1], m[0]); };
		vec4 xwyy() const { return vec4(m[0], m[3], m[1], m[1]); };
		vec4 xwyz() const { return vec4(m[0], m[3], m[1], m[2]); };
		vec4 xwyw() const { return vec4(m[0], m[3], m[1], m[3]); };
		vec4 xwzx() const { return vec4(m[0], m[3], m[2], m[0]); };
		vec4 xwzy() const { return vec4(m[0], m[3], m[2], m[1]); };
		vec4 xwzz() const { return vec4(m[0], m[3], m[2], m[2]); };
		vec4 xwzw() const { return vec4(m[0], m[3], m[2], m[3]); };
		vec4 xwwx() const { return vec4(m[0], m[3], m[3], m[0]); };
		vec4 xwwy() const { return vec4(m[0], m[3], m[3], m[1]); };
		vec4 xwwz() const { return vec4(m[0], m[3], m[3], m[2]); };
		vec4 xwww() const { return vec4(m[0], m[3], m[3], m[3]); };

		vec4 yxxx() const { return vec4(m[1], m[0], m[0], m[0]); };
		vec4 yxxy() const { return vec4(m[1], m[0], m[0], m[1]); };
		vec4 yxxz() const { return vec4(m[1], m[0], m[0], m[2]); };
		vec4 yxxw() const { return vec4(m[1], m[0], m[0], m[3]); };
		vec4 yxyx() const { return vec4(m[1], m[0], m[1], m[0]); };
		vec4 yxyy() const { return vec4(m[1], m[0], m[1], m[1]); };
		vec4 yxyz() const { return vec4(m[1], m[0], m[1], m[2]); };
		vec4 yxyw() const { return vec4(m[1], m[0], m[1], m[3]); };
		vec4 yxzx() const { return vec4(m[1], m[0], m[2], m[0]); };
		vec4 yxzy() const { return vec4(m[1], m[0], m[2], m[1]); };
		vec4 yxzz() const { return vec4(m[1], m[0], m[2], m[2]); };
		vec4 yxzw() const { return vec4(m[1], m[0], m[2], m[3]); };
		vec4 yxwx() const { return vec4(m[1], m[0], m[3], m[0]); };
		vec4 yxwy() const { return vec4(m[1], m[0], m[3], m[1]); };
		vec4 yxwz() const { return vec4(m[1], m[0], m[3], m[2]); };
		vec4 yxww() const { return vec4(m[1], m[0], m[3], m[3]); };
		vec4 yyxx() const { return vec4(m[1], m[1], m[0], m[0]); };
		vec4 yyxy() const { return vec4(m[1], m[1], m[0], m[1]); };
		vec4 yyxz() const { return vec4(m[1], m[1], m[0], m[2]); };
		vec4 yyxw() const { return vec4(m[1], m[1], m[0], m[3]); };
		vec4 yyyx() const { return vec4(m[1], m[1], m[1], m[0]); };
		vec4 yyyy() const { return vec4(m[1], m[1], m[1], m[1]); };
		vec4 yyyz() const { return vec4(m[1], m[1], m[1], m[2]); };
		vec4 yyyw() const { return vec4(m[1], m[1], m[1], m[3]); };
		vec4 yyzx() const { return vec4(m[1], m[1], m[2], m[0]); };
		vec4 yyzy() const { return vec4(m[1], m[1], m[2], m[1]); };
		vec4 yyzz() const { return vec4(m[1], m[1], m[2], m[2]); };
		vec4 yyzw() const { return vec4(m[1], m[1], m[2], m[3]); };
		vec4 yywx() const { return vec4(m[1], m[1], m[3], m[0]); };
		vec4 yywy() const { return vec4(m[1], m[1], m[3], m[1]); };
		vec4 yywz() const { return vec4(m[1], m[1], m[3], m[2]); };
		vec4 yyww() const { return vec4(m[1], m[1], m[3], m[3]); };
		vec4 yzxx() const { return vec4(m[1], m[2], m[0], m[0]); };
		vec4 yzxy() const { return vec4(m[1], m[2], m[0], m[1]); };
		vec4 yzxz() const { return vec4(m[1], m[2], m[0], m[2]); };
		vec4 yzxw() const { return vec4(m[1], m[2], m[0], m[3]); };
		vec4 yzyx() const { return vec4(m[1], m[2], m[1], m[0]); };
		vec4 yzyy() const { return vec4(m[1], m[2], m[1], m[1]); };
		vec4 yzyz() const { return vec4(m[1], m[2], m[1], m[2]); };
		vec4 yzyw() const { return vec4(m[1], m[2], m[1], m[3]); };
		vec4 yzzx() const { return vec4(m[1], m[2], m[2], m[0]); };
		vec4 yzzy() const { return vec4(m[1], m[2], m[2], m[1]); };
		vec4 yzzz() const { return vec4(m[1], m[2], m[2], m[2]); };
		vec4 yzzw() const { return vec4(m[1], m[2], m[2], m[3]); };
		vec4 yzwx() const { return vec4(m[1], m[2], m[3], m[0]); };
		vec4 yzwy() const { return vec4(m[1], m[2], m[3], m[1]); };
		vec4 yzwz() const { return vec4(m[1], m[2], m[3], m[2]); };
		vec4 yzww() const { return vec4(m[1], m[2], m[3], m[3]); };
		vec4 ywxx() const { return vec4(m[1], m[3], m[0], m[0]); };
		vec4 ywxy() const { return vec4(m[1], m[3], m[0], m[1]); };
		vec4 ywxz() const { return vec4(m[1], m[3], m[0], m[2]); };
		vec4 ywxw() const { return vec4(m[1], m[3], m[0], m[3]); };
		vec4 ywyx() const { return vec4(m[1], m[3], m[1], m[0]); };
		vec4 ywyy() const { return vec4(m[1], m[3], m[1], m[1]); };
		vec4 ywyz() const { return vec4(m[1], m[3], m[1], m[2]); };
		vec4 ywyw() const { return vec4(m[1], m[3], m[1], m[3]); };
		vec4 ywzx() const { return vec4(m[1], m[3], m[2], m[0]); };
		vec4 ywzy() const { return vec4(m[1], m[3], m[2], m[1]); };
		vec4 ywzz() const { return vec4(m[1], m[3], m[2], m[2]); };
		vec4 ywzw() const { return vec4(m[1], m[3], m[2], m[3]); };
		vec4 ywwx() const { return vec4(m[1], m[3], m[3], m[0]); };
		vec4 ywwy() const { return vec4(m[1], m[3], m[3], m[1]); };
		vec4 ywwz() const { return vec4(m[1], m[3], m[3], m[2]); };
		vec4 ywww() const { return vec4(m[1], m[3], m[3], m[3]); };

		vec4 zxxx() const { return vec4(m[2], m[0], m[0], m[0]); };
		vec4 zxxy() const { return vec4(m[2], m[0], m[0], m[1]); };
		vec4 zxxz() const { return vec4(m[2], m[0], m[0], m[2]); };
		vec4 zxxw() const { return vec4(m[2], m[0], m[0], m[3]); };
		vec4 zxyx() const { return vec4(m[2], m[0], m[1], m[0]); };
		vec4 zxyy() const { return vec4(m[2], m[0], m[1], m[1]); };
		vec4 zxyz() const { return vec4(m[2], m[0], m[1], m[2]); };
		vec4 zxyw() const { return vec4(m[2], m[0], m[1], m[3]); };
		vec4 zxzx() const { return vec4(m[2], m[0], m[2], m[0]); };
		vec4 zxzy() const { return vec4(m[2], m[0], m[2], m[1]); };
		vec4 zxzz() const { return vec4(m[2], m[0], m[2], m[2]); };
		vec4 zxzw() const { return vec4(m[2], m[0], m[2], m[3]); };
		vec4 zxwx() const { return vec4(m[2], m[0], m[3], m[0]); };
		vec4 zxwy() const { return vec4(m[2], m[0], m[3], m[1]); };
		vec4 zxwz() const { return vec4(m[2], m[0], m[3], m[2]); };
		vec4 zxww() const { return vec4(m[2], m[0], m[3], m[3]); };
		vec4 zyxx() const { return vec4(m[2], m[1], m[0], m[0]); };
		vec4 zyxy() const { return vec4(m[2], m[1], m[0], m[1]); };
		vec4 zyxz() const { return vec4(m[2], m[1], m[0], m[2]); };
		vec4 zyxw() const { return vec4(m[2], m[1], m[0], m[3]); };
		vec4 zyyx() const { return vec4(m[2], m[1], m[1], m[0]); };
		vec4 zyyy() const { return vec4(m[2], m[1], m[1], m[1]); };
		vec4 zyyz() const { return vec4(m[2], m[1], m[1], m[2]); };
		vec4 zyyw() const { return vec4(m[2], m[1], m[1], m[3]); };
		vec4 zyzx() const { return vec4(m[2], m[1], m[2], m[0]); };
		vec4 zyzy() const { return vec4(m[2], m[1], m[2], m[1]); };
		vec4 zyzz() const { return vec4(m[2], m[1], m[2], m[2]); };
		vec4 zyzw() const { return vec4(m[2], m[1], m[2], m[3]); };
		vec4 zywx() const { return vec4(m[2], m[1], m[3], m[0]); };
		vec4 zywy() const { return vec4(m[2], m[1], m[3], m[1]); };
		vec4 zywz() const { return vec4(m[2], m[1], m[3], m[2]); };
		vec4 zyww() const { return vec4(m[2], m[1], m[3], m[3]); };
		vec4 zzxx() const { return vec4(m[2], m[2], m[0], m[0]); };
		vec4 zzxy() const { return vec4(m[2], m[2], m[0], m[1]); };
		vec4 zzxz() const { return vec4(m[2], m[2], m[0], m[2]); };
		vec4 zzxw() const { return vec4(m[2], m[2], m[0], m[3]); };
		vec4 zzyx() const { return vec4(m[2], m[2], m[1], m[0]); };
		vec4 zzyy() const { return vec4(m[2], m[2], m[1], m[1]); };
		vec4 zzyz() const { return vec4(m[2], m[2], m[1], m[2]); };
		vec4 zzyw() const { return vec4(m[2], m[2], m[1], m[3]); };
		vec4 zzzx() const { return vec4(m[2], m[2], m[2], m[0]); };
		vec4 zzzy() const { return vec4(m[2], m[2], m[2], m[1]); };
		vec4 zzzz() const { return vec4(m[2], m[2], m[2], m[2]); };
		vec4 zzzw() const { return vec4(m[2], m[2], m[2], m[3]); };
		vec4 zzwx() const { return vec4(m[2], m[2], m[3], m[0]); };
		vec4 zzwy() const { return vec4(m[2], m[2], m[3], m[1]); };
		vec4 zzwz() const { return vec4(m[2], m[2], m[3], m[2]); };
		vec4 zzww() const { return vec4(m[2], m[2], m[3], m[3]); };
		vec4 zwxx() const { return vec4(m[2], m[3], m[0], m[0]); };
		vec4 zwxy() const { return vec4(m[2], m[3], m[0], m[1]); };
		vec4 zwxz() const { return vec4(m[2], m[3], m[0], m[2]); };
		vec4 zwxw() const { return vec4(m[2], m[3], m[0], m[3]); };
		vec4 zwyx() const { return vec4(m[2], m[3], m[1], m[0]); };
		vec4 zwyy() const { return vec4(m[2], m[3], m[1], m[1]); };
		vec4 zwyz() const { return vec4(m[2], m[3], m[1], m[2]); };
		vec4 zwyw() const { return vec4(m[2], m[3], m[1], m[3]); };
		vec4 zwzx() const { return vec4(m[2], m[3], m[2], m[0]); };
		vec4 zwzy() const { return vec4(m[2], m[3], m[2], m[1]); };
		vec4 zwzz() const { return vec4(m[2], m[3], m[2], m[2]); };
		vec4 zwzw() const { return vec4(m[2], m[3], m[2], m[3]); };
		vec4 zwwx() const { return vec4(m[2], m[3], m[3], m[0]); };
		vec4 zwwy() const { return vec4(m[2], m[3], m[3], m[1]); };
		vec4 zwwz() const { return vec4(m[2], m[3], m[3], m[2]); };
		vec4 zwww() const { return vec4(m[2], m[3], m[3], m[3]); };

		vec4 wxxx() const { return vec4(m[3], m[0], m[0], m[0]); };
		vec4 wxxy() const { return vec4(m[3], m[0], m[0], m[1]); };
		vec4 wxxz() const { return vec4(m[3], m[0], m[0], m[2]); };
		vec4 wxxw() const { return vec4(m[3], m[0], m[0], m[3]); };
		vec4 wxyx() const { return vec4(m[3], m[0], m[1], m[0]); };
		vec4 wxyy() const { return vec4(m[3], m[0], m[1], m[1]); };
		vec4 wxyz() const { return vec4(m[3], m[0], m[1], m[2]); };
		vec4 wxyw() const { return vec4(m[3], m[0], m[1], m[3]); };
		vec4 wxzx() const { return vec4(m[3], m[0], m[2], m[0]); };
		vec4 wxzy() const { return vec4(m[3], m[0], m[2], m[1]); };
		vec4 wxzz() const { return vec4(m[3], m[0], m[2], m[2]); };
		vec4 wxzw() const { return vec4(m[3], m[0], m[2], m[3]); };
		vec4 wxwx() const { return vec4(m[3], m[0], m[3], m[0]); };
		vec4 wxwy() const { return vec4(m[3], m[0], m[3], m[1]); };
		vec4 wxwz() const { return vec4(m[3], m[0], m[3], m[2]); };
		vec4 wxww() const { return vec4(m[3], m[0], m[3], m[3]); };
		vec4 wyxx() const { return vec4(m[3], m[1], m[0], m[0]); };
		vec4 wyxy() const { return vec4(m[3], m[1], m[0], m[1]); };
		vec4 wyxz() const { return vec4(m[3], m[1], m[0], m[2]); };
		vec4 wyxw() const { return vec4(m[3], m[1], m[0], m[3]); };
		vec4 wyyx() const { return vec4(m[3], m[1], m[1], m[0]); };
		vec4 wyyy() const { return vec4(m[3], m[1], m[1], m[1]); };
		vec4 wyyz() const { return vec4(m[3], m[1], m[1], m[2]); };
		vec4 wyyw() const { return vec4(m[3], m[1], m[1], m[3]); };
		vec4 wyzx() const { return vec4(m[3], m[1], m[2], m[0]); };
		vec4 wyzy() const { return vec4(m[3], m[1], m[2], m[1]); };
		vec4 wyzz() const { return vec4(m[3], m[1], m[2], m[2]); };
		vec4 wyzw() const { return vec4(m[3], m[1], m[2], m[3]); };
		vec4 wywx() const { return vec4(m[3], m[1], m[3], m[0]); };
		vec4 wywy() const { return vec4(m[3], m[1], m[3], m[1]); };
		vec4 wywz() const { return vec4(m[3], m[1], m[3], m[2]); };
		vec4 wyww() const { return vec4(m[3], m[1], m[3], m[3]); };
		vec4 wzxx() const { return vec4(m[3], m[2], m[0], m[0]); };
		vec4 wzxy() const { return vec4(m[3], m[2], m[0], m[1]); };
		vec4 wzxz() const { return vec4(m[3], m[2], m[0], m[2]); };
		vec4 wzxw() const { return vec4(m[3], m[2], m[0], m[3]); };
		vec4 wzyx() const { return vec4(m[3], m[2], m[1], m[0]); };
		vec4 wzyy() const { return vec4(m[3], m[2], m[1], m[1]); };
		vec4 wzyz() const { return vec4(m[3], m[2], m[1], m[2]); };
		vec4 wzyw() const { return vec4(m[3], m[2], m[1], m[3]); };
		vec4 wzzx() const { return vec4(m[3], m[2], m[2], m[0]); };
		vec4 wzzy() const { return vec4(m[3], m[2], m[2], m[1]); };
		vec4 wzzz() const { return vec4(m[3], m[2], m[2], m[2]); };
		vec4 wzzw() const { return vec4(m[3], m[2], m[2], m[3]); };
		vec4 wzwx() const { return vec4(m[3], m[2], m[3], m[0]); };
		vec4 wzwy() const { return vec4(m[3], m[2], m[3], m[1]); };
		vec4 wzwz() const { return vec4(m[3], m[2], m[3], m[2]); };
		vec4 wzww() const { return vec4(m[3], m[2], m[3], m[3]); };
		vec4 wwxx() const { return vec4(m[3], m[3], m[0], m[0]); };
		vec4 wwxy() const { return vec4(m[3], m[3], m[0], m[1]); };
		vec4 wwxz() const { return vec4(m[3], m[3], m[0], m[2]); };
		vec4 wwxw() const { return vec4(m[3], m[3], m[0], m[3]); };
		vec4 wwyx() const { return vec4(m[3], m[3], m[1], m[0]); };
		vec4 wwyy() const { return vec4(m[3], m[3], m[1], m[1]); };
		vec4 wwyz() const { return vec4(m[3], m[3], m[1], m[2]); };
		vec4 wwyw() const { return vec4(m[3], m[3], m[1], m[3]); };
		vec4 wwzx() const { return vec4(m[3], m[3], m[2], m[0]); };
		vec4 wwzy() const { return vec4(m[3], m[3], m[2], m[1]); };
		vec4 wwzz() const { return vec4(m[3], m[3], m[2], m[2]); };
		vec4 wwzw() const { return vec4(m[3], m[3], m[2], m[3]); };
		vec4 wwwx() const { return vec4(m[3], m[3], m[3], m[0]); };
		vec4 wwwy() const { return vec4(m[3], m[3], m[3], m[1]); };
		vec4 wwwz() const { return vec4(m[3], m[3], m[3], m[2]); };
		vec4 wwww() const { return vec4(m[3], m[3], m[3], m[3]); };

		void x(float in) { m[0] = in; };
		void y(float in) { m[1] = in; };
		void z(float in) { m[2] = in; };
		void w(float in) { m[3] = in; };

	};

}

#endif